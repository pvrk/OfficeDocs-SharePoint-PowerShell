### YamlMime:PowershellCmdlet
summary: |-
  Sets the version policy setting on the document library.
module: Microsoft.Online.SharePoint.PowerShell
links:
- text: Get-SPOListVersionPolicy
  href: Get-SPOListVersionPolicy.yml
syntaxes:
- Set-SPOListVersionPolicy [-Site] <SpoSitePipeBind> [-List] <SpoListPipeBind> [-EnableAutoExpirationVersionTrim <Boolean>] [-MajorVersionLimit <int>] [-MajorWithMinorVersionsLimit <int>] [-ExpireVersionsAfterDays <int>] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Set-SPOListVersionPolicy -Site https://contoso.sharepoint.com/sites/site1 -List "Documents" -EnableAutoExpirationVersionTrim $true
  description: |-
    Example 1 sets automatic version history limits on the document library called "Documents".
  summary: ""
- title: EXAMPLE 2
  code: |-
    Set-SPOListVersionPolicy -Site https://contoso.sharepoint.com/sites/site1 -List "Documents" -EnableAutoExpirationVersionTrim $false -MajorVersionLimit 500 -MajorWithMinorVersionsLimit 20 -ExpireVersionsAfterDays 30
  description: |-
    Example 2 sets manual version histroy limits on the document library called "Documents" by limiting the number of versions and the time (in days) versions are kept.
  summary: ""
- title: EXAMPLE 3
  code: |-
    Set-SPOListVersionPolicy -Site https://contoso.sharepoint.com/sites/site1 -List "Documents" -EnableAutoExpirationVersionTrim $false -MajorVersionLimit 500 -MajorWithMinorVersionsLimit 20 -ExpireVersionsAfterDays 0
  description: |-
    Example 3 sets manual version histroy limits on the document library called "Documents" by limiting the number of versions with no time limits. The new document libraries will use this version setting.
  summary: ""
parameters:
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: EnableAutoExpirationVersionTrim
  description: |+
    Global and SharePoint Administrators can set document library level version history limits settings that universally apply to new versions created.

    When version history limits are managed automatically, SharePoint employs an algorithm behind the scenes that deletes (thins out) intermittent older versions that are least likely to be needed, while preserving sufficient high-value versions - more versions in the recent past and fewer farther back in time - in case restores are required.

    The valid values are:

    - True - Version history limits for new versions created on the document library will be managed automatically.
    - False - Version history limits for new Versions created on the document library will be managed manually by setting limits to the number of major versions (`MajorVersionLimit`), number of major with minor versions (`MajorWithMinorVersionsLimit`) and time set (`ExpireVersionsAfterDays`). Review the documentation of both parameters to manage your organization's version limits manually.

    > [!NOTE]
    > When version history limits are managed manually (`EnableAutoExpirationVersionTrim $false`), `MajorVersionLimit`, `MajorWithMinorVersionsLimit` and `ExpireVersionsAfterDays` are required parameters with the following acceptable values:
    > a. `MajorVersionLimit` accepts values from 1 through 50,000 (inclusive).
    > b. `MajorWithMinorVersionsLimit` accepts values from 0 through 50,000 (inclusive).
    > c. `ExpireVersionsAfterDays` accepts values of 0 to Never Expire or values >= 30 to delete versions that exceed that time period.
    > When Version history limits are managed automatically (`EnableAutoExpirationVersionTrim $true`), setting `MajorVersionLimit` or `ExpireVersionsAfterDays` will result in an error as the count limits are set by the service.

    PARAMVALUE: $true | $false

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Online
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ExpireVersionsAfterDays
  description: |+
    When version history limits are managed manually (`EnableAutoExpirationVersionTrim $false`), admins will need to set the limits to the number of major versions (`MajorVersionLimit`), the number of major with minor versions (`MajorWithMinorVersionsLimit`) and the time period the versions are stored (`ExpireVersionsAfterDays`). Please check the description of `EnableAutoExpirationVersionTrim` for more details.

    PARAMVALUE: Int32

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Online
  parameterValueGroup: ""
- type: <xref href="SPOListPipeBind" data-throw-if-not-resolved="False" />
  name: List
  isRequired: true
  description: |+
    The document library name or Id.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: MajorVersionLimit
  description: |+
    When version history limits are managed manually (`EnableAutoExpirationVersionTrim $false`), admins will need to set the limits to the number of major versions (`MajorVersionLimit`) and the time period the versions are stored (`ExpireVersionsAfterDays`). Please check the description of `EnableAutoExpirationVersionTrim` for more details.

    PARAMVALUE: Int32

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Online
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: MajorWithMinorVersionsLimit
  description: |+
    When version history limits are managed manually (`EnableAutoExpirationVersionTrim $false`), admins will need to set the limits to the number of major versions (`MajorVersionLimit`), the number of major with minor versions (`MajorWithMinorVersionsLimit`) and the time period the versions are stored (`ExpireVersionsAfterDays`). Please check the description of `EnableAutoExpirationVersionTrim` for more details.

    PARAMVALUE: Int32

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Online
  parameterValueGroup: ""
- type: <xref href="SpoSitePipeBind" data-throw-if-not-resolved="False" />
  name: Site
  isRequired: true
  description: |+
    Specifies the URL of the site.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - SharePoint Online
  parameterValueGroup: ""
applicable:
- SharePoint Online
uid: Microsoft.Online.SharePoint.PowerShell.Set-SPOListVersionPolicy
name: Set-SPOListVersionPolicy
description: |-
  Sets the version policy setting on the document library.
metadata:
  external help file: sharepointonline.xml
  Module Name: Microsoft.Online.SharePoint.PowerShell
  online version: https://learn.microsoft.com/powershell/module/sharepoint-online/set-spolistversionpolicy
  applicable: SharePoint Online
  title: Set-SPOListVersionPolicy
  PlatyPS schema version: 2.0.0
  author: msjennywu
  ms.author: jennywu
  ms.reviewer: ""
  manager: seanmc
